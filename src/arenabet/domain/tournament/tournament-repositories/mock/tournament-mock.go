// Code generated by MockGen. DO NOT EDIT.
// Source: domain/tournament/tournament-repositories/tournament-repository.go

// Package mock_tournament_repositories is a generated GoMock package.
package mock_tournament_repositories

import (
	reflect "reflect"

	tournament_entities "github.com/JozPedro23zx/arena-bet-hub/domain/tournament/tournament-entities"
	gomock "github.com/golang/mock/gomock"
)

// MockTournamentRepository is a mock of TournamentRepository interface.
type MockTournamentRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTournamentRepositoryMockRecorder
}

// MockTournamentRepositoryMockRecorder is the mock recorder for MockTournamentRepository.
type MockTournamentRepositoryMockRecorder struct {
	mock *MockTournamentRepository
}

// NewMockTournamentRepository creates a new mock instance.
func NewMockTournamentRepository(ctrl *gomock.Controller) *MockTournamentRepository {
	mock := &MockTournamentRepository{ctrl: ctrl}
	mock.recorder = &MockTournamentRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTournamentRepository) EXPECT() *MockTournamentRepositoryMockRecorder {
	return m.recorder
}

// Find mocks base method.
func (m *MockTournamentRepository) Find(id string) (*tournament_entities.Tournament, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Find", id)
	ret0, _ := ret[0].(*tournament_entities.Tournament)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Find indicates an expected call of Find.
func (mr *MockTournamentRepositoryMockRecorder) Find(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Find", reflect.TypeOf((*MockTournamentRepository)(nil).Find), id)
}

// Insert mocks base method.
func (m *MockTournamentRepository) Insert(tournament tournament_entities.Tournament) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", tournament)
	ret0, _ := ret[0].(error)
	return ret0
}

// Insert indicates an expected call of Insert.
func (mr *MockTournamentRepositoryMockRecorder) Insert(tournament interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockTournamentRepository)(nil).Insert), tournament)
}
